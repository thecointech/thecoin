swagger: "2.0"
info:
  description: "TheCoin TapCap resolution.  This service is the trusted 3rd party that weekly settles TapCap purchases"
  version: "0.0.1"
  title: "TheCoin Broker"
  contact:
    email: "stephen.taylor.dev@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
tags:
- name: "Transactions"
  description: "The Coin: TapCap manager is responsible for resolving TapCap transactions, transfering the appropriate coin from seller to buyer weekly"
- name: "Status"
  description: "Users may query their account status"


# ---------------------------------------------------------------- #

consumes:
  - application/json
produces:
  - application/json
#schemes:
#- "https"

paths:
  /tap/broker:
    post:
      tags:
        - Transactions
      summary: "Broker: Register new TapCap transaction"
      operationId: "TapCapBroker"
      parameters:
        - in: body
          name: request
          description: "TapCap exchange request"
          required: true
          schema: 
            $ref: "#/definitions/MessageSigned" # signed ( TapCapPurchaseBroker )
      responses:
        405:
          description: Invalid input
        200:
          description: Transaction Result
          schema:
            required:
              - errorCode
            properties:
              errorCode:
                type: integer

  /tap/client: 
    post:
      tags:
        - Transactions
      summary: "Client: Confirm new TapCap transaction"
      operationId: "TapCapClient"
      parameters:
        - in: body
          name: request
          description: "TapCap status request"
          required: true
          schema: 
            $ref: "#/definitions/MessageSigned" # signed ( signed ( TapCapPurchaseBroker ) )
      responses:
        405:
          description: "Invalid input"
        200:
          description: "TapCap Token valid for the next purchase"
          schema:
            $ref: "#/definitions/MessageSigned" # TapCapToken


  /status/summary:
    post:
      tags: 
        - Status
      summary: "TapCap current status"
      description: "User TapCap status"
      operationId: "TapCapStatus"
      parameters:
        - in: body
          name: request
          description: "TapCap status request"
          required: true
          schema: 
            $ref: "#/definitions/MessageSigned" # signed ( TapCapQueryRequest )
      responses:
        405:
          description: "Invalid input"
        200:
          description: TapCap Status
          schema:
            $ref: "#/definitions/TapCapQueryResponse"

  /status/history:
    post:
      tags:
        - Status
      summary: "TapCap history"
      description: "User TapCap history in the ranges provided"
      operationId: "TapCapHistory"
      parameters:
        - in: body
          name: request
          description: "Purchase Request info"
          required: true
          schema: 
            $ref: "#/definitions/MessageSigned" # signed ( TapCapHistoryRequest )
      responses:
        405:
          description: "Invalid input"
        200:
          description: TapCap Status
          schema:
            $ref: "#/definitions/TapCapHistoryResponse"

  # a simple endpoint to unlock the wallet included with this thingy
  # TODO: Find a better - or more automated way - of getting this on the server
  /unlock:
    post:
      tags:
        - Unlock
      operationId: "unlock"
      parameters:
        - in: header
          name: X-Request-Key
          required: true
          type: string
      responses:
        405:
          description: "Invalid input"
        200:
          description: OK
          schema:
            type: string

definitions:
  # A token signed by the TapCapManager
  MessageSigned:
    required:
      - message
      - signature
    properties:
      token:
        type: message # Any of the below, in string form
      signature:
        type: string

  # A token may be presented to a broker
  # as proof of funds.  If signed by the
  # broker, it indicates the client is trusted
  # and has sufficient balance to cover the
  # available balance listed here.
  TapCapToken:
    required:
      - clientAccount
      - availableBalance
      - transactionId
      - timestamp
    properties:
      clientAccount:
        type: string
      availableBalance:
        type: number
        format: int64    
      transactionId:
        type: number
      # The timestamp of issue.  A broker
      # may ignore a token if the timestamp is too old
      timestamp:
        type: number
        format: int64

  # A purchase request is sent to a broker.  If
  # the broker satisfies the request, the signed
  # purchase structure may be forwarded to the
  # manager for settlement
  TapCapPurchase:
    required:
      - fiat
      - currencyCode
      - timestamp
      - gpoData
      - certificateRequest
      - token
    properties:
      fiat:
        type: number
      currencyCode:
        type: number
      timestamp:  # Only requests in the past X seconds will be acccepted?  Security risk here?
        type: number
        format: int64
      gpoData:
        type: string
        format: byte
      certificateRequest:
        type: string
        format: byte
      token:
        $ref: "#/definitions/MessageSigned" # TapCapToken

  # If the broker accepts the request, they generate
  # this response structure, fill out the fields and
  # return to the client.
  TapCapPurchaseBroker:
    required:
      - clientRequest
      - coin
      - cert
    properties:
      clientRequest:
        $ref: "#/definitions/MessageSigned" # TapCapPurchase
      coin:  # The amount of coin being charged for this transaction
        type: number
        format: int64
      cert:
        type: string

  # # The broker signs the return structure to 
  # # guarantee the purchase will be successful
  # TapCapPurchaseBrokerSigned:
  #   required:
  #     - purchaseRequest
  #     - signature
  #   properties:
  #     purchaseRequest:
  #       # A purchase request is a JSON String of TapCapPurchaseBroker
  #       type: string
  #     signature:
  #       type: string

  # # The client finally signs the result, and submits
  # # to the central bank to confirm all has gone to plan
  # TapCapPurchaseFinalSigned:
  #   required:
  #     - brokerSigned
  #     - signature
  #   properties:
  #     brokerSigned:
  #       # A purchase request is a JSON String of TapCapPurchaseBrokerSigned
  #       type: string
  #     signature:
  #       type: string

  # ---------------------------------------------------------------- #

  # Query the Manager for a clients TapCap balance  
  TapCapQueryRequest:
    required:
    - timestamp
    properties:
      timestamp:  # Only requests in the past X seconds will be acccepted?  Security risk here?
        type: number
        format: int64

  # basic stats 
  TapCapQueryResponse:
    required:
    - balance
    - weeklyTopup
    - token
    properties:
      balance:
        type: number
        format: int64
      weeklyTopup:
        type: number
        format: int64
      token: 
        $ref: "#/definitions/MessageSigned" # sign ( TapCapToken )

  TapCapHistoryRequest:
    required:
    - fromTimestamp
    - untilTimestamp
    - msgTimestamp 
    properties:
      fromTimestamp:
        type: number
        format: int64
      untilTimestamp:
        type: number
        format: int64
      # Only requests from the preceding 5 seconds will be fullfilled.
      # This prevents someone copying/cloning a message and using repeating it later.
      msgTimestamp:
        type: number
        format: int64

      
  TapCapTransaction:
    required:
      - timestamp
      - fiatAmount
      - coinAmount
      - coinBalance
      - merchantId
    properties:
      timestamp:
        type: number
        format: int64
      fiatAmount:
        type: number
        format: double
      coinAmount:
        type: number
        format: int64
      coinBalance:
        type: number
        format: int64
      merchantId:
        type: string

  TapCapHistoryResponse:
    required:
      - history
    properties:
      history:
        type: array
        items:
          $ref: "#/definitions/TapCapTransaction"   

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"