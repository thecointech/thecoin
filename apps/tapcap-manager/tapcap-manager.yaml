swagger: "2.0"
info:
  description: "The TapCap resolution.  This service is the trusted 3rd party that weekly settles TapCap purchases"
  version: "0.0.1"
  title: "The TapCap Manager"
  contact:
    email: "stephen.taylor.dev@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8091"
tags:
- name: "Transactions"
  description: "The: TapCap manager is responsible for resolving TapCap transactions, transfering the appropriate coin from seller to buyer weekly"
- name: "Status"
  description: "Users may query their account status"
- name: "Unlock"
  description: "Temp method for unlocking account till we find something better (NOT FOR PUBLIC USE)"

# ---------------------------------------------------------------- #

consumes:
  - application/json
produces:
  - application/json
#schemes:
#- "https"

paths:
  /tap/broker:
    post:
      tags:
        - Transactions
      summary: "Broker: Register new TapCap transaction"
      operationId: "tapCapBroker"
      parameters:
        - in: body
          name: request
          description: "TapCap exchange request"
          required: true
          schema:
            $ref: "../common.yaml#/definitions/SignedMessage" # signed ( TapCapBrokerPurchase )
      responses:
        405:
          description: Invalid input
          schema:
            $ref: "../common.yaml#/definitions/ErrorMessage"
        200:
          description: Transaction Result
          schema:
            $ref: "../common.yaml#/definitions/ErrorMessage"

  /tap/client:
    post:
      tags:
        - Transactions
      summary: "Client: Confirm new TapCap transaction"
      operationId: "tapCapClient"
      parameters:
        - in: body
          name: request
          description: "TapCap status request"
          required: true
          schema:
            $ref: "../common.yaml#/definitions/SignedMessage" # signed ( signed ( TapCapBrokerPurchase ) )
      responses:
        405:
          description: "Invalid input"
          schema:
            $ref: "../common.yaml#/definitions/ErrorMessage"
        200:
          description: "TapCap Token valid for the next purchase"
          schema:
            $ref: "../common.yaml#/definitions/SignedMessage" # signed ( TapCapToken )

  /status/summary:
    post:
      tags:
        - Status
      summary: "TapCap current status"
      description: "User TapCap status"
      operationId: "tapCapStatus"
      parameters:
        - in: body
          name: request
          description: "TapCap status request"
          required: true
          schema:
            $ref: "../common.yaml#/definitions/SignedMessage" # signed ( TapCapQueryRequest )
      responses:
        405:
          description: "Invalid input"
          schema:
            $ref: "../common.yaml#/definitions/ErrorMessage"
        200:
          description: TapCap Status
          schema:
            $ref: "#/definitions/TapCapQueryResponse"

  /status/history:
    post:
      tags:
        - Status
      summary: "TapCap history"
      description: "User TapCap history in the ranges provided"
      operationId: "tapCapHistory"
      parameters:
        - in: body
          name: request
          description: "Purchase Request info"
          required: true
          schema:
            $ref: "../common.yaml#/definitions/SignedMessage" # signed ( TapCapHistoryRequest )
      responses:
        405:
          description: "Invalid input"
          schema:
            $ref: "../common.yaml#/definitions/ErrorMessage"
        200:
          description: TapCap Status
          schema:
            $ref: "#/definitions/TapCapHistoryResponse"

  # a simple endpoint to unlock the wallet included with this thingys
  # TODO: Find a better - or more automated way - of getting this on the server
  /unlock:
    post:
      tags:
        - Unlock
      operationId: "unlock"
      parameters:
        - in: header
          name: X-Request-Key
          required: true
          type: string
      responses:
        405:
          description: "Invalid input"
          schema:
            $ref: "../common.yaml#/definitions/ErrorMessage"
        200:
          description: OK
          schema:
            $ref: "../common.yaml#/definitions/ErrorMessage"

definitions:
  # Query the Manager for a clients TapCap balance
  TapCapQueryRequest:
    required:
    - timestamp
    properties:
      timestamp:  # Only requests in the past X seconds will be acccepted?  Security risk here?
        type: integer
        format: int64

  # basic stats
  TapCapQueryResponse:
    required:
    - balance
    - token
    properties:
      balance:
        type: integer
        format: int64
      token:
        $ref: "#/definitions/SignedMessage" # sign ( TapCapToken )

  TapCapHistoryRequest:
    required:
    - fromTimestamp
    - untilTimestamp
    - msgTimestamp
    properties:
      fromTimestamp:
        type: integer
        format: int64
      untilTimestamp:
        type: integer
        format: int64
      # Only requests from the preceding 5 seconds will be fullfilled.
      # This prevents someone copying/cloning a message and using repeating it later.
      msgTimestamp:
        type: integer
        format: int64


  TapCapTransaction:
    required:
      - timestamp
      - fiatAmount
      - coinAmount
      - coinBalance
      - merchantId
    properties:
      timestamp:
        type: integer
        format: int64
      fiatAmount:
        type: number
        format: double
      coinAmount:
        type: integer
        format: int64
      coinBalance:
        type: integer
        format: int64
      merchantId:
        type: string

  TapCapHistoryResponse:
    required:
      - history
    properties:
      history:
        type: array
        items:
          $ref: "#/definitions/TapCapTransaction"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
