/**
 * The TapCap Manager
 * The TapCap resolution.  This service is the trusted 3rd party that weekly settles TapCap purchases
 *
 * OpenAPI spec version: 0.0.1
 * Contact: stephen.taylor.dev@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FXRate model module.
 * @module model/FXRate
 * @version 0.0.1
 */
class FXRate {
    /**
     * Constructs a new <code>FXRate</code>.
     * @alias module:model/FXRate
     * @param buy {Number} 
     * @param sell {Number} 
     * @param fxRate {Number} 
     * @param validFrom {Number} 
     * @param validTill {Number} 
     */
    constructor(buy, sell, fxRate, validFrom, validTill) { 
        
        FXRate.initialize(this, buy, sell, fxRate, validFrom, validTill);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, buy, sell, fxRate, validFrom, validTill) { 
        obj['buy'] = buy;
        obj['sell'] = sell;
        obj['fxRate'] = fxRate;
        obj['validFrom'] = validFrom;
        obj['validTill'] = validTill;
    }

    /**
     * Constructs a <code>FXRate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FXRate} obj Optional instance to populate.
     * @return {module:model/FXRate} The populated <code>FXRate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FXRate();

            if (data.hasOwnProperty('target')) {
                obj['target'] = ApiClient.convertToType(data['target'], 'Number');
            }
            if (data.hasOwnProperty('buy')) {
                obj['buy'] = ApiClient.convertToType(data['buy'], 'Number');
            }
            if (data.hasOwnProperty('sell')) {
                obj['sell'] = ApiClient.convertToType(data['sell'], 'Number');
            }
            if (data.hasOwnProperty('fxRate')) {
                obj['fxRate'] = ApiClient.convertToType(data['fxRate'], 'Number');
            }
            if (data.hasOwnProperty('validFrom')) {
                obj['validFrom'] = ApiClient.convertToType(data['validFrom'], 'Number');
            }
            if (data.hasOwnProperty('validTill')) {
                obj['validTill'] = ApiClient.convertToType(data['validTill'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} target
 */
FXRate.prototype['target'] = undefined;

/**
 * @member {Number} buy
 */
FXRate.prototype['buy'] = undefined;

/**
 * @member {Number} sell
 */
FXRate.prototype['sell'] = undefined;

/**
 * @member {Number} fxRate
 */
FXRate.prototype['fxRate'] = undefined;

/**
 * @member {Number} validFrom
 */
FXRate.prototype['validFrom'] = undefined;

/**
 * @member {Number} validTill
 */
FXRate.prototype['validTill'] = undefined;






export default FXRate;

