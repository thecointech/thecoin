/**
 * TheCoin Broker
 * TheCoin TapCap resolution.  This service is the trusted 3rd party that weekly settles TapCap purchases
 *
 * OpenAPI spec version: 0.0.1
 * Contact: stephen.taylor.dev@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import SignedMessage from './model/SignedMessage';
import TapCapHistoryRequest from './model/TapCapHistoryRequest';
import TapCapHistoryResponse from './model/TapCapHistoryResponse';
import TapCapPurchase from './model/TapCapPurchase';
import TapCapPurchaseBroker from './model/TapCapPurchaseBroker';
import TapCapQueryRequest from './model/TapCapQueryRequest';
import TapCapQueryResponse from './model/TapCapQueryResponse';
import TapCapToken from './model/TapCapToken';
import TapCapTransaction from './model/TapCapTransaction';
import StatusApi from './api/StatusApi';
import TransactionsApi from './api/TransactionsApi';
import UnlockApi from './api/UnlockApi';


/**
* TheCoin_TapCap_resolution___This_service_is_the_trusted_3rd_party_that_weekly_settles_TapCap_purchases.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TapcapManager = require('index'); // See note below*.
* var xxxSvc = new TapcapManager.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TapcapManager.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TapcapManager.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TapcapManager.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.0.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The SignedMessage model constructor.
     * @property {module:model/SignedMessage}
     */
    SignedMessage,

    /**
     * The TapCapHistoryRequest model constructor.
     * @property {module:model/TapCapHistoryRequest}
     */
    TapCapHistoryRequest,

    /**
     * The TapCapHistoryResponse model constructor.
     * @property {module:model/TapCapHistoryResponse}
     */
    TapCapHistoryResponse,

    /**
     * The TapCapPurchase model constructor.
     * @property {module:model/TapCapPurchase}
     */
    TapCapPurchase,

    /**
     * The TapCapPurchaseBroker model constructor.
     * @property {module:model/TapCapPurchaseBroker}
     */
    TapCapPurchaseBroker,

    /**
     * The TapCapQueryRequest model constructor.
     * @property {module:model/TapCapQueryRequest}
     */
    TapCapQueryRequest,

    /**
     * The TapCapQueryResponse model constructor.
     * @property {module:model/TapCapQueryResponse}
     */
    TapCapQueryResponse,

    /**
     * The TapCapToken model constructor.
     * @property {module:model/TapCapToken}
     */
    TapCapToken,

    /**
     * The TapCapTransaction model constructor.
     * @property {module:model/TapCapTransaction}
     */
    TapCapTransaction,

    /**
    * The StatusApi service constructor.
    * @property {module:api/StatusApi}
    */
    StatusApi,

    /**
    * The TransactionsApi service constructor.
    * @property {module:api/TransactionsApi}
    */
    TransactionsApi,

    /**
    * The UnlockApi service constructor.
    * @property {module:api/UnlockApi}
    */
    UnlockApi
};
