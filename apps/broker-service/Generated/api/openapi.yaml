openapi: 3.0.1
info:
  contact:
    email: stephen.taylor.dev@gmail.com
  description: TheCoin simple broker services.  This sample API is an example of how
    to setup the simplest low-volume exchange, when combined with the included server
    code, without external dependencies
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: THE Coin Broker Sample
  version: 0.1.0
servers:
- url: https://broker-cad.appspot.com/
tags:
- description: The Coin exchange service.  This API allows clients to exchange THESE
    for CAD
  name: eTransfer
- description: Request the broker to make a transfer on the clients behalf
  name: Transfer
- description: Functions to help secure an account
  name: Secure
paths:
  /status:
    get:
      description: Returns info like brokers address, available balance, etc (?)
      operationId: status
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerStatus'
          description: Server status
        "405":
          content: {}
          description: Server Error
      summary: Gets the operating status of the broker
      tags:
      - Status
      x-openapi-router-controller: StatusController
      x-openapi-router-service: StatusService
  /referrers:
    get:
      description: Returns a boolean indicating whether the passed referrer is valid
      operationId: referrerValid
      parameters:
      - description: Referrers ID.  This ID must have been previously registered with
          the system
        in: query
        name: referrer
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
          description: Id Valid
        "405":
          content: {}
          description: Server Error
      summary: Gets the validity of the passed referrer
      tags:
      - Referrers
      x-openapi-router-controller: ReferrersController
      x-openapi-router-service: ReferrersService
    post:
      description: Returns a boolean indicating whether the passed referrer is valid
      operationId: referralCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAccountReferal'
        description: Set referal for new account
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
          description: Referral success
        "405":
          content: {}
          description: Server Error
      summary: Register the referral of new account
      tags:
      - Referrers
      x-codegen-request-body-name: referral
      x-openapi-router-controller: ReferrersController
      x-openapi-router-service: ReferrersService
  /exchange/eTransfer:
    post:
      description: Called by the client to exchange coin for CAD and send via eTransfer
      operationId: eTransfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertifiedTransfer'
        description: Must contain a transfer to this brokers address, and an encrypted
          ETransferPacket
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertifiedTransferResponse'
          description: The response confirms to the user the order has been processed
        "405":
          content: {}
          description: Invalid input
      summary: Request eTransfer
      tags:
      - eTransfer
      x-codegen-request-body-name: request
      x-openapi-router-controller: ETransferController
      x-openapi-router-service: ETransferService
  /exchange/eTransfer/code:
    put:
      description: A code unique to the user that is required on all eTransfers sent
        in to this broker
      operationId: eTransferInCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignedMessage'
        description: Signed timestamp message
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eTransferCodeResponse'
          description: The requesters unique eTransfer code.
        "405":
          content: {}
          description: Invalid input
      summary: Required answer for eTransfer sent to this broker
      tags:
      - eTransfer
      x-codegen-request-body-name: request
      x-openapi-router-controller: ETransferController
      x-openapi-router-service: ETransferService
  /bills/payment:
    post:
      description: Called by the client to pay a bill with coin via a certified transfer
      operationId: billPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertifiedTransfer'
        description: Must contain a transfer to this brokers address, and an encrypted
          BillPayeePacket
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertifiedTransferResponse'
          description: The response confirms to the user the order has been processed
        "405":
          content: {}
          description: Invalid input
      summary: Bill Payment
      tags:
      - Bill Payments
      x-codegen-request-body-name: request
      x-openapi-router-controller: BillPaymentsController
      x-openapi-router-service: BillPaymentsService
  /transfer:
    post:
      description: A client may request that the Broker initiate a transfer from their
        account to another.  The transfer includes a fee paid to the broker to cover
        the cost of the transfer.  This allows a user to operate on the Ethereum blockchain
        without requiring their own ether
      operationId: transfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertifiedTransferRequest'
        description: A request appropriately filled out and signed as described in
          the comments
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertifiedTransferResponse'
          description: The response confirms to the user the order transfer is valid
            and has been initiated
        "405":
          content: {}
          description: Invalid input
      summary: Transfer to another The Coin account
      tags:
      - Transfer
      x-codegen-request-body-name: request
      x-openapi-router-controller: TransferController
      x-openapi-router-service: TransferService
  /secure/google:
    get:
      operationId: googleAuthUrl
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAuthUrl'
          description: Google authorization URL
      summary: Get the authorization URL to redirect the user to
      tags:
      - Secure
      x-openapi-router-controller: SecureController
      x-openapi-router-service: SecureService
  /secure/google/list:
    put:
      operationId: googleList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleToken'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleListResult'
          description: Account successfully stored
        "405":
          content: {}
          description: Permission Denied
      summary: Get the listing of available accounts
      tags:
      - Secure
      x-codegen-request-body-name: token
      x-openapi-router-controller: SecureController
      x-openapi-router-service: SecureService
  /secure/google/put:
    put:
      operationId: googlePut
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleStoreAccount'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
          description: Account successfully stored
        "405":
          content: {}
          description: Permission Denied
      summary: Store on google drive
      tags:
      - Secure
      x-codegen-request-body-name: uploadPacket
      x-openapi-router-controller: SecureController
      x-openapi-router-service: SecureService
  /secure/google/get:
    put:
      operationId: googleRetrieve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleToken'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleGetResult'
          description: Account successfully stored
        "405":
          content: {}
          description: Permission Denied
      summary: Retrieve previously-stored file from google drive
      tags:
      - Secure
      x-codegen-request-body-name: token
      x-openapi-router-controller: SecureController
      x-openapi-router-service: SecureService
  /newsletter/signup:
    put:
      operationId: newsletterSignup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDetails'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
          description: Email successfully registered
        "500":
          content: {}
          description: Server Error
      summary: Register an email address for our newsletter.
      tags:
      - Newsletter
      x-codegen-request-body-name: details
      x-openapi-router-controller: NewsletterController
      x-openapi-router-service: NewsletterService
  /newsletter/confirm:
    put:
      operationId: newsletterConfirm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDetails'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetails'
          description: If found, returns new details merged with existing
        "400":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Confirm email subscription.
      tags:
      - Newsletter
      x-codegen-request-body-name: details
      x-openapi-router-controller: NewsletterController
      x-openapi-router-service: NewsletterService
  /newsletter/details:
    get:
      operationId: newsletterDetails
      parameters:
      - in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetails'
          description: If found, returns subscription details
        "400":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Get subscription details.
      tags:
      - Newsletter
      x-openapi-router-controller: NewsletterController
      x-openapi-router-service: NewsletterService
  /newsletter/unsubscribe:
    get:
      operationId: newsletterUnsubscribe
      parameters:
      - in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
          description: Email successfully registered
        "400":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Server Error
      summary: Unsubscribe an email address from our newsletter.
      tags:
      - Newsletter
      x-openapi-router-controller: NewsletterController
      x-openapi-router-service: NewsletterService
components:
  schemas:
    SignedMessage:
      example:
        signature: signature
        message: message
      properties:
        message:
          type: string
        signature:
          type: string
      required:
      - message
      - signature
      type: object
    CertifiedTransferRequest:
      example:
        signature: signature
        fee: 6
        from: from
        to: to
        value: 0
        timestamp: 1
      properties:
        from:
          type: string
        to:
          type: string
        value:
          type: integer
        fee:
          type: integer
        timestamp:
          type: integer
        signature:
          type: string
      required:
      - fee
      - from
      - signature
      - timestamp
      - to
      - value
      type: object
    CertifiedTransferResponse:
      example:
        message: message
        txHash: txHash
      properties:
        message:
          type: string
        txHash:
          type: string
      required:
      - message
      - txHash
      type: object
    EncryptedPacket:
      example:
        encryptedPacket: encryptedPacket
        version: version
      properties:
        encryptedPacket:
          type: string
        version:
          type: string
      required:
      - encryptedPacket
      - version
      type: object
    CertifiedTransfer:
      example:
        instructionPacket:
          encryptedPacket: encryptedPacket
          version: version
        transfer:
          signature: signature
          fee: 6
          from: from
          to: to
          value: 0
          timestamp: 1
        signature: signature
      properties:
        transfer:
          $ref: '#/components/schemas/CertifiedTransferRequest'
        instructionPacket:
          $ref: '#/components/schemas/EncryptedPacket'
        signature:
          type: string
      required:
      - instructionPacket
      - signature
      - transfer
      type: object
    ETransferPacket:
      properties:
        email:
          type: string
        question:
          type: string
        answer:
          type: string
        message:
          type: string
      required:
      - answer
      - email
      - question
      type: object
    eTransferCodeResponse:
      example:
        code: code
        error: error
      properties:
        code:
          type: string
        error:
          type: string
      type: object
    BillPayeePacket:
      properties:
        payee:
          type: string
        accountNumber:
          type: string
      type: object
    BrokerStatus:
      example:
        address: address
        certifiedFee: 0
      properties:
        address:
          type: string
        certifiedFee:
          type: integer
      required:
      - address
      - certifiedFee
      type: object
    NewAccountReferal:
      example:
        referrerId: referrerId
        newAccount: newAccount
      properties:
        referrerId:
          type: string
        newAccount:
          type: string
      required:
      - newAccount
      - referrerId
      type: object
    BoolResponse:
      properties:
        success:
          type: boolean
      title: A bool that to be returned indicating success/failure
      type: boolean
    GoogleAuthUrl:
      example:
        url: url
      properties:
        url:
          type: string
      required:
      - url
      type: object
    GoogleToken:
      example:
        token: token
      properties:
        token:
          type: string
      required:
      - token
      type: object
    GoogleStoreAccount:
      example:
        wallet: wallet
        walletName: walletName
        token:
          token: token
      properties:
        token:
          $ref: '#/components/schemas/GoogleToken'
        wallet:
          type: string
        walletName:
          type: string
      required:
      - token
      - wallet
      - walletName
      type: object
    GoogleFileIdent:
      example:
        name: name
        id: id
        type: type
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
      required:
      - id
      type: object
    GoogleWalletItem:
      example:
        wallet: wallet
        id:
          name: name
          id: id
          type: type
      properties:
        id:
          $ref: '#/components/schemas/GoogleFileIdent'
        wallet:
          type: string
      required:
      - id
      type: object
    GoogleListResult:
      example:
        wallets:
        - name: name
          id: id
          type: type
        - name: name
          id: id
          type: type
      properties:
        wallets:
          items:
            $ref: '#/components/schemas/GoogleFileIdent'
          type: array
      required:
      - wallets
      type: object
    GoogleGetResult:
      example:
        wallets:
        - wallet: wallet
          id:
            name: name
            id: id
            type: type
        - wallet: wallet
          id:
            name: name
            id: id
            type: type
      properties:
        wallets:
          items:
            $ref: '#/components/schemas/GoogleWalletItem'
          type: array
      required:
      - wallets
      type: object
    SubscriptionDetails:
      example:
        firstName: firstName
        lastName: lastName
        country: country
        city: city
        id: id
        confirmed: true
        email: email
      properties:
        id:
          type: string
        email:
          type: string
        confirmed:
          type: boolean
        firstName:
          type: string
        lastName:
          type: string
        country:
          type: string
        city:
          type: string
      type: object
