/**
 * TheCoin Core
 * TheCoin core services.  Published by TheCoin Tech
 *
 * OpenAPI spec version: 0.1.0
 * Contact: stephen.taylor.dev@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/FXRate'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/FXRate'));
  } else {
    // Browser globals (root is window)
    if (!root.TheCoinCore) {
      root.TheCoinCore = {};
    }
    root.TheCoinCore.RatesApi = factory(root.TheCoinCore.ApiClient, root.TheCoinCore.FXRate);
  }
}(this, function(ApiClient, FXRate) {
  'use strict';

  /**
   * Rates service.
   * @module api/RatesApi
   * @version 0.1.0
   */

  /**
   * Constructs a new RatesApi. 
   * @alias module:api/RatesApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;



    /**
     * Exchange Rate
     * Query exchange rate for THE into the given currency
     * @param {Number} currencyCode The integer code for the countries currency
     * @param {Number} timestamp The timestamp we are requesting valid values for
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/FXRate} and HTTP response
     */
    this.getConversionWithHttpInfo = function(currencyCode, timestamp) {
      var postBody = null;

      // verify the required parameter 'currencyCode' is set
      if (currencyCode === undefined || currencyCode === null) {
        throw new Error("Missing the required parameter 'currencyCode' when calling getConversion");
      }

      // verify the required parameter 'timestamp' is set
      if (timestamp === undefined || timestamp === null) {
        throw new Error("Missing the required parameter 'timestamp' when calling getConversion");
      }


      var pathParams = {
        'currencyCode': currencyCode
      };
      var queryParams = {
        'timestamp': timestamp,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = FXRate;

      return this.apiClient.callApi(
        '/rates/{currencyCode}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Exchange Rate
     * Query exchange rate for THE into the given currency
     * @param {Number} currencyCode The integer code for the countries currency
     * @param {Number} timestamp The timestamp we are requesting valid values for
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/FXRate}
     */
    this.getConversion = function(currencyCode, timestamp) {
      return this.getConversionWithHttpInfo(currencyCode, timestamp)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
  };

  return exports;
}));
