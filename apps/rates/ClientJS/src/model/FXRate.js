/**
 * TheCoin Core
 * TheCoin core services.  Published by TheCoin Tech
 *
 * OpenAPI spec version: 0.1.0
 * Contact: stephen.taylor.dev@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.TheCoinCore) {
      root.TheCoinCore = {};
    }
    root.TheCoinCore.FXRate = factory(root.TheCoinCore.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The FXRate model module.
   * @module model/FXRate
   * @version 0.1.0
   */

  /**
   * Constructs a new <code>FXRate</code>.
   * @alias module:model/FXRate
   * @class
   * @param buy {Number} 
   * @param sell {Number} 
   * @param fxRate {Number} 
   * @param validFrom {Number} 
   * @param validTill {Number} 
   */
  var exports = function(buy, sell, fxRate, validFrom, validTill) {
    var _this = this;


    _this['Buy'] = buy;
    _this['Sell'] = sell;
    _this['FxRate'] = fxRate;
    _this['ValidFrom'] = validFrom;
    _this['ValidTill'] = validTill;
  };

  /**
   * Constructs a <code>FXRate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FXRate} obj Optional instance to populate.
   * @return {module:model/FXRate} The populated <code>FXRate</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('target')) {
        obj['target'] = ApiClient.convertToType(data['target'], 'Number');
      }
      if (data.hasOwnProperty('Buy')) {
        obj['Buy'] = ApiClient.convertToType(data['Buy'], 'Number');
      }
      if (data.hasOwnProperty('Sell')) {
        obj['Sell'] = ApiClient.convertToType(data['Sell'], 'Number');
      }
      if (data.hasOwnProperty('FxRate')) {
        obj['FxRate'] = ApiClient.convertToType(data['FxRate'], 'Number');
      }
      if (data.hasOwnProperty('ValidFrom')) {
        obj['ValidFrom'] = ApiClient.convertToType(data['ValidFrom'], 'Number');
      }
      if (data.hasOwnProperty('ValidTill')) {
        obj['ValidTill'] = ApiClient.convertToType(data['ValidTill'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {Number} target
   */
  exports.prototype['target'] = undefined;
  /**
   * @member {Number} Buy
   */
  exports.prototype['Buy'] = undefined;
  /**
   * @member {Number} Sell
   */
  exports.prototype['Sell'] = undefined;
  /**
   * @member {Number} FxRate
   */
  exports.prototype['FxRate'] = undefined;
  /**
   * @member {Number} ValidFrom
   */
  exports.prototype['ValidFrom'] = undefined;
  /**
   * @member {Number} ValidTill
   */
  exports.prototype['ValidTill'] = undefined;



  return exports;
}));


