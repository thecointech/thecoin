// Generated by Haxe 4.0.0-preview.4+1e3e5e016
(function ($hx_exports) { "use strict";
var $hxEnums = {};
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var CoinTime = $hx_exports["CoinTime"] = function() { };
CoinTime.prototype = {
	CoinTimeHrs: function(hrs) {
		return hrs * 60 * 60 * CoinTime.CoinTimeHZ;
	}
	,GetNow: function() {
		return this.TimeToCT(new Date().getTime());
	}
	,TimeToCT: function(time) {
		return Math.floor((time - CoinTime.ZeroTime) / (1000 / CoinTime.CoinTimeHZ));
	}
	,DateToCT: function(date) {
		return this.TimeToCT(date.getTime());
	}
	,CTToTime: function(ct) {
		return CoinTime.ZeroTime + ct * (1000 / CoinTime.CoinTimeHZ);
	}
	,CTToDate: function(ct) {
		return new Date(this.CTToTime(ct));
	}
};
var HxOverrides = function() { };
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
CoinTime.CoinTimeHZ = 10;
CoinTime.ZeroTime = Date.UTC(2018,6,1,0,0,0);
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this);
