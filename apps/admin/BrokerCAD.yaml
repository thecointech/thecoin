swagger: "2.0"
info:
  description: "TheCoin simple broker services.  This sample API is an example of how to setup the simplest low-volume exchange, when combined with the included server code, without external dependencies"
  version: "0.1.0"
  title: "THE Coin Broker Sample"
  contact:
    email: "stephen.taylor.dev@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
tags:
- name: "Purchase"
  description: "The Coin exchange service.  This API allows clients to request purchase THESE"
- name: "Sell"
  description: "The Coin exchange service.  This API allows clients to exchange THESE for CAD"
consumes:
- "application/json"
produces:
- "application/json"
schemes:
- "http"

definitions:

  # Client order to purchase Coin.
  # We send an email to the client to request
  # payment in the amount specified here.
  # Signing - just because - cannot think of any attacks it prevents
  # Attack vectors:
  #   - Spamming requests to random email addresses
  #   - Trying to duplicate legitimate request for a specific email 
  SignedPurchaseRequest:
    required:
      - timestamp
      - cadAmount
      - email
      - signature
    properties:
      timestamp:
        type: number
        format: integer
      email:
        type: string
      cadAmount:
        type: number
        format: integer
      # Signature is included in purchase request so it
      # can be stored along with the 
      signature:
        type: string # Signature is amount + email + timestamp

  # Sent by broker to confirm email request sent
  # Signed:
  #   Prevents: Attacker with access to DB fakes email to client
  #             and injects this value to prevent us from sending
  #             (not much of an defense, but allays suspicion)
  #   Allows: Verification of sender for brokers with multiple users.
  SignedPurchaseConfirm:
    required:
      - timestamp
      - signature # Signature is sig(timestamp + orderId)
    properties:
      timestamp:
        type: number
        format: integer
      signature:
        type: string

  # Message sent by the Broker to confirm that
  # purchase has been completed
  # Signing - just because
  PurchaseComplete:
    required:
      - timestamp
      - cadAmount
      - coinAmount
      - coinRate
      - cadRate
      - txHash
    properties:
      timestamp:
        type: number
        format: integer
      cadAmount:
        type: number
        format: integer
      coinAmount:
        type: number
        format: integer
      coinRate:
        type: number
      cadRate:
        type: number
      txHash:       # Hash of the transaction which deposit coinAmount in userAddress at timestamp
        type: string

  # Sent in response to an order request.
  # Order ID is the id of the order, and is
  # defined by the broker.
  PurchaseResponse:
    required:
      - orderId
    properties:
      orderId:
        type: string

  # An array of Id's
  PurchaseIds:
    type: array
    items:
      type: string

  PurchaseState:
    minProperties: 1
    properties:
      request:
        $ref: "#/definitions/SignedPurchaseRequest"
      confirm:
        $ref: "#/definitions/SignedPurchaseConfirm"
      complete:
        $ref: "#/definitions/PurchaseComplete"

  ############################################################

  SellRequest:
    required:
      - txHash
      - email
    properties:
      email:
        type: string    # The email to transfer the proceeds of sale to
      txHash:
        type: string    # The hash of the sell order transaction
      blockNumber:
        type: integer   # The block the transaction was mined in.

  # The confirm is not sent, instead the server
  # directly confirms the transaction by watching
  # the block chain directly.

  SellComplete:
    required:
      - timestamp   # Time the CAD was sent to the client
      - coinAmount  # Amount of funds 
      - coinRate
      - cadRate
      - cadAmount
    properties:
      timestamp:
        type: number
        format: integer
      cadAmount:
        type: number
        format: integer
      coinAmount:
        type: number
        format: integer
      coinRate:
        type: number
      cadRate:
        type: number

  SellResponse:
    required:
      - orderId
    properties:
      orderId:
        type: string

  ############################################################

  # The message must be a signed JSON string, however
  # it is transmitted in string form to ensure the
  # differences in JSON parsing do not alter the signature
  SignedMessage:
    required:
      - message
      - signature
    properties:
      message:
        type: string
      signature:
        type: string

paths:
  /exchange/buy/initiate:
    post:
      tags: 
        - Purchase
      summary: "Request to buy Coin"
      description: "Called by the client to exchange CAD for coin"
      operationId: "requestCoinPurchase"
      responses:
        405:
          description: "Invalid input"
        200:
          description: The response confirms to the user the order was accepted
          schema:
            $ref: "#/definitions/PurchaseResponse"
      parameters:
        - in: body
          name: request
          description: "Signed buy order request"
          required: true
          schema: 
            $ref: "#/definitions/SignedPurchaseRequest"

  # TODO: Add API key to this method!!
  /exchange/buy/{user}/{id}/confirm:
    post:
      tags: 
        - Purchase
      summary: "Confirm order opened"
      description: "Called by the Broker once e-transfer initiated"
      operationId: "confirmCoinPurchase"
      responses:
        405:
          description: "Invalid input"
        200:
          description: The response confirms to the user the order was accepted
          schema:
            $ref: "#/definitions/PurchaseResponse"
      parameters:
        - name: user
          in: path
          required: true
          description: User address
          type: string
        - name: id
          in: path
          required: true
          description: Id of purchase order to return
          type: integer
        - in: body
          name: request
          description: "Signed buy order confirm"
          required: true
          schema: 
            $ref: "#/definitions/SignedPurchaseConfirm"
            
  # TODO: Add API key to this method!!
  /exchange/buy/{user}/{id}/complete:
    post:
      tags: 
        - Purchase
      summary: "Mark buy order complete"
      description: "Called by the broker to confirm CAD was deposited and coin disbursed"
      operationId: "completeCoinPurchase"
      responses:
        405:
          description: "Invalid input"
        200:
          description: The response confirms to the user the purchase is completed
          schema:
            $ref: "#/definitions/PurchaseResponse"
      parameters:
        - name: user
          in: path
          required: true
          description: User address
          type: string
        - name: id
          in: path
          required: true
          description: Id of purchase order to complete
          type: integer
        - in: body
          name: request
          description: "Signed PurchaseComplete"
          required: true
          schema: 
            $ref: "#/definitions/SignedMessage"
  # TODO: Add API key to this method!!
  /exchange/buy/:
    get:
      tags: 
        - Purchase
      summary: "Query buy order id's"
      description: "Called by the broker to retrieve all buy orders ID's in the passed state."
      operationId: "queryCoinPurchasesIds"
      responses:
        405:
          description: "Invalid input"
        200:
          description: A list of all currently open purchases
          schema:
            $ref: "#/definitions/PurchaseIds"
      parameters:
        - name: state
          in: query
          required: true
          description: Numerical state identifier.  Returned array will be all of type state
          type: number

  /exchange/buy/{user}/{id}:
    get:
      tags: 
        - Purchase
      summary: "Query open buy orders"
      description: "Called by the broker to retrieve all open buy orders."
      operationId: "queryCoinPurchase"
      responses:
        405:
          description: "Invalid input"
        200:
          description: A list of all currently open purchases
          schema:
            $ref: "#/definitions/PurchaseState"
      parameters:
        - name: user
          in: path
          required: true
          description: User address
          type: string
        - name: id
          in: path
          required: true
          description: Id of purchase order to return
          type: integer
        - name: state
          in: query
          description: Numerical state identifier.  If not present, all states will be returned
          type: string


  # This query is open to anyone
  /exchange/sell/initiate:
    post:
      tags: 
        - Sell
      summary: "Request coin sale"
      description: "Called by the client to exchange coin for CAD"
      operationId: "requestCoinSale"
      responses:
        405:
          description: "Invalid input"
        200:
          description: The response confirms to the user the order was accepted
          schema:
            $ref: "#/definitions/SellResponse"
      parameters:
        - in: body
          name: request
          description: "Signed sell order request"
          required: true
          schema: 
            $ref: "#/definitions/SignedMessage"

    # TODO: Add API key to this method!!
  /exchange/sell/{user}/{id}/complete:
    post:
      tags: 
        - Sell
      summary: "Mark coin sale complete"
      description: "Called by the client to exchange coin for CAD"
      operationId: "completeCoinSale"
      responses:
        405:
          description: "Invalid input"
        200:
          description: The response confirms to the user the order was accepted
          schema:
            $ref: "#/definitions/SellResponse"
      parameters:
        - name: user
          in: path
          required: true
          description: User address
          type: string
        - name: id
          in: path
          required: true
          description: Id of purchase order to return
          type: integer
        - in: body
          name: request
          description: "Signed sell order request"
          required: true
          schema: 
            $ref: "#/definitions/SignedMessage"