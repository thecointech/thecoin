{
  "name": "@the-coin/admin",
  "productName": "THECoin: Admin app",
  "version": "2.0.0",
  "description": "A Desktop application to run back-end functionality for THECoin",
  "scripts": {
    "build": "concurrently \"yarn run build-main\" \"yarn run build-renderer\"",
    "build-dll": "cross-env NODE_ENV=development webpack --config ./configs/webpack.config.renderer.dev.dll.babel.js --colors",
    "build-e2e": "cross-env E2E_BUILD=true yarn run build",
    "build-main": "cross-env NODE_ENV=production webpack --config ./configs/webpack.config.main.prod.babel.js --colors",
    "build-renderer": "cross-env NODE_ENV=production webpack --config ./configs/webpack.config.renderer.prod.babel.js --colors",
    "dev": "cross-env START_HOT=1 node -r @babel/register ./internals/scripts/CheckPortInUse.js && cross-env START_HOT=1 yarn run start-renderer-dev",
    "lint": "cross-env NODE_ENV=development eslint --cache --format=pretty .",
    "lint-fix": "yarn run --silent lint --fix; exit 0",
    "lint-styles": "stylelint --ignore-path .eslintignore '**/*.*(css|scss)' --syntax scss",
    "lint-styles-fix": "yarn run --silent lint-styles --fix; exit 0",
    "package": "yarn run build && electron-builder build --publish never",
    "package-all": "yarn run build && electron-builder build -mwl",
    "package-ci": "yarn run postinstall && yarn run build && electron-builder --publish always",
    "package-linux": "yarn run build && electron-builder build --linux",
    "package-win": "yarn run build && electron-builder build --win --x64",
    "postinstall": "node ./postinstallcwd.js",
    "postinstallcwd": "electron-builder install-app-deps package.json",
    "postlint-styles-fix": "prettier --ignore-path .eslintignore --single-quote --write '**/*.{css,scss}'",
    "prestart": "yarn run build",
    "start": "cross-env NODE_ENV=production && cross-env DEBUG_PROD=true && electron ./app/main.prod.js --debug",
    "start-main-dev": "cross-env HOT=1 NODE_ENV=development electron ./app/main.dev.babel.js --remote-debugging-port=9223 --nolazy --inspect=15454",
    "start-renderer-dev": "cross-env NODE_ENV=development webpack-dev-server --config configs/webpack.config.renderer.dev.babel.js",
    "test": "cross-env NODE_ENV=test BABEL_DISABLE_CACHE=1 jest",
    "test-all": "yarn run lint && yarn run build && yarn run test && yarn run build-e2e && yarn run test-e2e",
    "test-e2e": "node -r @babel/register ./internals/scripts/CheckBuiltsExist.js && cross-env NODE_ENV=test testcafe electron:./ ./test/e2e/HomePage.e2e.ts",
    "test-e2e-live": "node -r @babel/register ./internals/scripts/CheckBuiltsExist.js && cross-env NODE_ENV=test testcafe-live electron:./ ./test/e2e/HomePage.e2e.ts",
    "test-watch": "yarn run test --watch"
  },
  "lint-staged": {
    "*.{js,jsx}": [
      "cross-env NODE_ENV=development eslint --cache --format=pretty",
      "prettier --ignore-path .eslintignore --single-quote --write",
      "git add"
    ],
    "{*.json,.{babelrc,eslintrc,prettierrc,stylelintrc}}": [
      "prettier --ignore-path .eslintignore --parser json --write",
      "git add"
    ],
    "*.{css,scss}": [
      "stylelint --ignore-path .eslintignore --syntax scss --fix",
      "prettier --ignore-path .eslintignore --single-quote --write",
      "git add"
    ],
    "*.{yml,md}": [
      "prettier --ignore-path .eslintignore --single-quote --write",
      "git add"
    ]
  },
  "main": "./app/main.prod.js",
  "build": {
    "productName": "THECoin: Admin",
    "appId": "org.thecoin.admin",
    "files": [
      "app/dist/",
      "app/app.html",
      "app/main.prod.js",
      "app/main.prod.js.map",
      "package.json"
    ],
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "win": {
      "target": [
        "nsis",
        "msi"
      ]
    },
    "linux": {
      "target": [
        "deb",
        "rpm",
        "snap",
        "AppImage"
      ],
      "category": "Development"
    },
    "directories": {
      "buildResources": "resources",
      "output": "release"
    },
    "publish": {
      "provider": "github",
      "owner": "electron-react-boilerplate",
      "repo": "electron-react-boilerplate",
      "private": false
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/electron-react-boilerplate/electron-react-boilerplate.git"
  },
  "license": "MIT",
  "devDependencies": {
    "cross-spawn": "^6.0.5",
    "detect-port": "^1.3.0",
    "electron": "^5.0.4",
    "electron-builder": "^20.43.0",
    "electron-devtools-installer": "^2.2.4",
    "fbjs-scripts": "^1.2.0",
    "identity-obj-proxy": "^3.0.0",
    "mini-css-extract-plugin": "^0.7.0",
    "optimize-css-assets-webpack-plugin": "^5.0.1",
    "react-test-renderer": "^16.8.6",
    "realpath": "^1.1.0",
    "spectron": "^5.0.0"
  },
  "dependencies": {
    "@fortawesome/fontawesome-free": "^5.9.0",
    "@the-coin/shared": "*",
    "@types/js-base64": "^2.3.1",
    "@types/puppeteer": "^2.0.1",
    "base32": "^0.0.6",
    "core-js": "^3.1.4",
    "devtron": "^1.4.0",
    "electron-debug": "^3.0.0",
    "electron-log": "^3.0.6",
    "electron-updater": "^4.0.6",
    "firebase": "^7.5.2",
    "js-base64": "^2.5.2",
    "puppeteer": "^2.1.1",
    "react-datetime": "^2.16.3",
    "react-hot-loader": "^4.11.1",
    "semantic-ui-css": "^2.4.1",
    "source-map-support": "^0.5.12",
    "pouchdb": "*"
  },
  "devEngines": {
    "node": ">=10.x",
    "npm": ">=4.x"
  },
  "collective": {
    "url": "https://opencollective.com/electron-react-boilerplate-594"
  },
  "browserslist": "electron 1.6"
}
