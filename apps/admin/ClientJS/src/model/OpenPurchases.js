/**
 * THE Coin Broker Sample
 * TheCoin simple broker services.  This sample API is an example of how to setup the simplest low-volume exchange, when combined with the included server code, without external dependencies
 *
 * OpenAPI spec version: 0.1.0
 * Contact: stephen.taylor.dev@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OpenRequest from './OpenRequest';

/**
 * The OpenPurchases model module.
 * @module model/OpenPurchases
 * @version 0.1.0
 */
class OpenPurchases extends Array {
    /**
     * Constructs a new <code>OpenPurchases</code>.
     * @alias module:model/OpenPurchases
     * @extends Array
     */
    constructor() { 
        super();
        
        
        OpenPurchases.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OpenPurchases</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OpenPurchases} obj Optional instance to populate.
     * @return {module:model/OpenPurchases} The populated <code>OpenPurchases</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OpenPurchases();

            ApiClient.constructFromObject(data, obj, 'OpenRequest');
            

        }
        return obj;
    }


}






export default OpenPurchases;

