{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "THE TapCap supply",
    "description" : "The interace for TapCap between buyers & sellers.",
    "contact" : {
      "email" : "stephen.taylor.dev@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "0.1.0"
  },
  "servers" : [ {
    "url" : "http://localhost:8070/"
  } ],
  "tags" : [ {
    "name" : "Transaction",
    "description" : "These API's can be called by a client to affect a TapCap purchase transaction, exchanging THE with the supplier to complete fiat tap transactions"
  } ],
  "paths" : {
    "/static" : {
      "post" : {
        "tags" : [ "Transaction" ],
        "summary" : "Get the list of static responses to cache for terminal queries",
        "operationId" : "getStatic",
        "requestBody" : {
          "description" : "Static data request",
          "content" : {
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SignedMessage"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Static response cache",
            "content" : {
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StaticResponses"
                }
              }
            }
          },
          "405" : {
            "description" : "Invalid input",
            "content" : {
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/tap" : {
      "post" : {
        "tags" : [ "Transaction" ],
        "summary" : "Request TapCap transaction",
        "description" : "This is sent in response to a terminal request.  The supplier is expected to return a valid certificate to pass to the terminal",
        "operationId" : "requestTapCap",
        "requestBody" : {
          "description" : "TapCap exchange request",
          "content" : {
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SignedMessage"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Info required to complete the transaction, including coin charged, and the data to be returned to the teriminal",
            "content" : {
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SignedMessage"
                }
              }
            }
          },
          "405" : {
            "description" : "Invalid input",
            "content" : {
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/contest" : {
      "post" : {
        "tags" : [ "Transaction" ],
        "summary" : "Notify of a contested transaction",
        "description" : "Notify supplier that the client will contest the passed transaction.  This is not necessary, a supplier should auotomatically undo any incompelete transactions, but it is a courtesy to the supplier",
        "operationId" : "contestTapCap",
        "requestBody" : {
          "description" : "TapCap exchange request",
          "content" : {
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SignedTapcapContest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Server status",
            "content" : {
              "application/yaml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContestResponse"
                }
              }
            }
          },
          "405" : {
            "description" : "Invalid input",
            "content" : { }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "StaticResponse" : {
        "required" : [ "query", "response" ],
        "type" : "object",
        "properties" : {
          "query" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "response" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          }
        }
      },
      "FXRate" : {
        "type" : "object",
        "properties" : {
          "target" : {
            "type" : "integer"
          },
          "buy" : {
            "type" : "number",
            "format" : "double"
          },
          "sell" : {
            "type" : "number",
            "format" : "double"
          },
          "fxRate" : {
            "type" : "number",
            "format" : "double"
          },
          "validFrom" : {
            "type" : "integer",
            "format" : "int64"
          },
          "validTill" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "TapCapToken" : {
        "required" : [ "availableBalance", "clientAccount", "timestamp", "transactionId" ],
        "type" : "object",
        "properties" : {
          "clientAccount" : {
            "type" : "string"
          },
          "availableBalance" : {
            "type" : "integer",
            "format" : "int64"
          },
          "transactionId" : {
            "type" : "integer"
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "TapCapClientRequest" : {
        "required" : [ "cryptoData", "currencyCode", "fiatAmount", "gpoData", "timestamp", "token" ],
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "fiatAmount" : {
            "type" : "number",
            "format" : "double"
          },
          "currencyCode" : {
            "type" : "integer"
          },
          "gpoData" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "cryptoData" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "token" : {
            "$ref" : "#/components/schemas/SignedMessage"
          }
        }
      },
      "TapCapBrokerPurchase" : {
        "required" : [ "FxRate", "coinCharge", "cryptoCertificate", "signedRequest" ],
        "type" : "object",
        "properties" : {
          "signedRequest" : {
            "$ref" : "#/components/schemas/SignedMessage"
          },
          "FxRate" : {
            "$ref" : "#/components/schemas/FXRate"
          },
          "coinCharge" : {
            "type" : "integer",
            "format" : "int64"
          },
          "cryptoCertificate" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          }
        }
      },
      "SignedTapcapContest" : {
        "required" : [ "fiatAmount", "pdol", "signature", "timestamp", "token" ],
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "fiatAmount" : {
            "type" : "number",
            "format" : "double"
          },
          "pdol" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "token" : {
            "$ref" : "#/components/schemas/SignedMessage"
          },
          "signature" : {
            "type" : "string"
          }
        }
      },
      "SignedMessage" : {
        "required" : [ "message", "signature" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "signature" : {
            "type" : "string"
          }
        }
      },
      "ContestResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "StaticResponses" : {
        "required" : [ "gpoPdol", "responses" ],
        "type" : "object",
        "properties" : {
          "gpoPdol" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "cryptoPdol" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "responses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StaticResponse"
            }
          }
        }
      },
      "ErrorMessage" : {
        "required" : [ "code", "id", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer"
          },
          "id" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      }
    }
  }
}
