/**
 * The TapCap Manager
 * The TapCap resolution.  This service is the trusted 3rd party that weekly settles TapCap purchases
 *
 * OpenAPI spec version: 0.0.1
 * Contact: stephen.taylor.dev@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FXRate from './FXRate';
import SignedMessage from './SignedMessage';

/**
 * The TapCapBrokerPurchase model module.
 * @module model/TapCapBrokerPurchase
 * @version 0.0.1
 */
class TapCapBrokerPurchase {
    /**
     * Constructs a new <code>TapCapBrokerPurchase</code>.
     * @alias module:model/TapCapBrokerPurchase
     * @param signedRequest {module:model/SignedMessage} 
     * @param fxRate {module:model/FXRate} 
     * @param coinCharge {Number} 
     * @param cryptoCertificate {Blob} 
     */
    constructor(signedRequest, fxRate, coinCharge, cryptoCertificate) { 
        
        TapCapBrokerPurchase.initialize(this, signedRequest, fxRate, coinCharge, cryptoCertificate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, signedRequest, fxRate, coinCharge, cryptoCertificate) { 
        obj['signedRequest'] = signedRequest;
        obj['FxRate'] = fxRate;
        obj['coinCharge'] = coinCharge;
        obj['cryptoCertificate'] = cryptoCertificate;
    }

    /**
     * Constructs a <code>TapCapBrokerPurchase</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TapCapBrokerPurchase} obj Optional instance to populate.
     * @return {module:model/TapCapBrokerPurchase} The populated <code>TapCapBrokerPurchase</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TapCapBrokerPurchase();

            if (data.hasOwnProperty('signedRequest')) {
                obj['signedRequest'] = SignedMessage.constructFromObject(data['signedRequest']);
            }
            if (data.hasOwnProperty('FxRate')) {
                obj['FxRate'] = FXRate.constructFromObject(data['FxRate']);
            }
            if (data.hasOwnProperty('coinCharge')) {
                obj['coinCharge'] = ApiClient.convertToType(data['coinCharge'], 'Number');
            }
            if (data.hasOwnProperty('cryptoCertificate')) {
                obj['cryptoCertificate'] = ApiClient.convertToType(data['cryptoCertificate'], 'Blob');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/SignedMessage} signedRequest
 */
TapCapBrokerPurchase.prototype['signedRequest'] = undefined;

/**
 * @member {module:model/FXRate} FxRate
 */
TapCapBrokerPurchase.prototype['FxRate'] = undefined;

/**
 * @member {Number} coinCharge
 */
TapCapBrokerPurchase.prototype['coinCharge'] = undefined;

/**
 * @member {Blob} cryptoCertificate
 */
TapCapBrokerPurchase.prototype['cryptoCertificate'] = undefined;






export default TapCapBrokerPurchase;

