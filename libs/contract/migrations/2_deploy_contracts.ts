import path from 'path';
import { existsSync, mkdirSync, writeFileSync } from 'fs';
import { toNamedAccounts } from '../src/accounts';

// It seems the types for deployProxy don't match the types
// generated by typechain.  We use require to strip the
// typing from OZ, as the function seems to work fine anyway
const { deployProxy } = require('@openzeppelin/truffle-upgrades');

const step: MigrationStep = (artifacts) =>
  async (deployer, network, accounts) => {

    const contract = artifacts.require("TheCoin");

    const { TheCoin } = toNamedAccounts(accounts);
    const proxy = await deployProxy(contract, [TheCoin], { deployer });

    // Serialize our contract addresses
    const outdir = path.join(__dirname, '..', 'src', 'deployed');
    if (!existsSync(outdir))
      mkdirSync(outdir);

    // Our contract-specific data (eg impl address, ProxyAdmin address etc) is in ../.openzeppelin/{network}.json
    const jsonFile = path.join(outdir, `${network}.json`);
    writeFileSync(jsonFile, JSON.stringify({
      proxy: proxy.address,
    }))
  }

module.exports = step
